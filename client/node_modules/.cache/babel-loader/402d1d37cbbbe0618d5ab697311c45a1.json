{"ast":null,"code":"// Generated from /home/mario/Desktop/ChessLion/client/src/utils/pgn/pgn.g4 by ANTLR 4.9.2\n// jshint ignore: start\nimport antlr4 from 'antlr4';\nconst serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\", \"\\u5964\\u0002\\u0014d\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\", \"\\u0004\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\", \"\\t\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\", \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\", \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\", \"\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\\u0003\\u0004\", \"\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0003\\u0006\\u0003\\u0007\\u0003\\u0007\", \"\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\\n\\u0003\", \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\", \"\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0006\\u000fI\\n\\u000f\", \"\\r\\u000f\\u000e\\u000fJ\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\", \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\", \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0005\\u0010Z\\n\\u0010\\u0003\\u0011\", \"\\u0006\\u0011]\\n\\u0011\\r\\u0011\\u000e\\u0011^\\u0003\\u0012\\u0003\\u0012\\u0003\", \"\\u0013\\u0003\\u0013\\u0002\\u0002\\u0014\\u0003\\u0003\\u0005\\u0004\\u0007\\u0005\", \"\\t\\u0006\\u000b\\u0007\\r\\b\\u000f\\t\\u0011\\n\\u0013\\u000b\\u0015\\f\\u0017\\r\", \"\\u0019\\u000e\\u001b\\u000f\\u001d\\u0010\\u001f\\u0011!\\u0012#\\u0013%\\u0014\", \"\\u0003\\u0002\\t\\u0003\\u0002cj\\u0003\\u00023:\\u0006\\u0002DDMMPPST\\u0006\", \"\\u0002##%%--AA\\u0003\\u00022;\\u0004\\u0002C\\\\c|\\u0005\\u0002\\u000b\\f\\u000f\", \"\\u000f\\\"\\\"\\u0002g\\u0002\\u0003\\u0003\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\", \"\\u0002\\u0002\\u0002\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\", \"\\u0002\\u0002\\u0002\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\", \"\\u0002\\u0002\\u0002\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\", \"\\u0002\\u0002\\u0002\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\", \"\\u0002\\u0002\\u0002\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\", \"\\u0002\\u0002\\u0002\\u0002\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\", \"\\u0002\\u0002\\u0002\\u0002\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\", \"\\u0002\\u0002\\u0002\\u0002#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\", \"\\u0002\\u0002\\u0003\\'\\u0003\\u0002\\u0002\\u0002\\u0005)\\u0003\\u0002\\u0002\", \"\\u0002\\u0007+\\u0003\\u0002\\u0002\\u0002\\t-\\u0003\\u0002\\u0002\\u0002\\u000b\", \"/\\u0003\\u0002\\u0002\\u0002\\r1\\u0003\\u0002\\u0002\\u0002\\u000f3\\u0003\\u0002\", \"\\u0002\\u0002\\u00115\\u0003\\u0002\\u0002\\u0002\\u00139\\u0003\\u0002\\u0002\", \"\\u0002\\u0015?\\u0003\\u0002\\u0002\\u0002\\u0017A\\u0003\\u0002\\u0002\\u0002\", \"\\u0019C\\u0003\\u0002\\u0002\\u0002\\u001bE\\u0003\\u0002\\u0002\\u0002\\u001d\", \"H\\u0003\\u0002\\u0002\\u0002\\u001fY\\u0003\\u0002\\u0002\\u0002!\\\\\\u0003\\u0002\", \"\\u0002\\u0002#`\\u0003\\u0002\\u0002\\u0002%b\\u0003\\u0002\\u0002\\u0002\\'(\", \"\\u0007$\\u0002\\u0002(\\u0004\\u0003\\u0002\\u0002\\u0002)*\\u0007}\\u0002\\u0002\", \"*\\u0006\\u0003\\u0002\\u0002\\u0002+,\\u0007\\u007f\\u0002\\u0002,\\b\\u0003\\u0002\", \"\\u0002\\u0002-.\\u0007]\\u0002\\u0002.\\n\\u0003\\u0002\\u0002\\u0002/0\\u0007\", \"_\\u0002\\u00020\\f\\u0003\\u0002\\u0002\\u000212\\u0007z\\u0002\\u00022\\u000e\", \"\\u0003\\u0002\\u0002\\u000234\\u0007?\\u0002\\u00024\\u0010\\u0003\\u0002\\u0002\", \"\\u000256\\u0007Q\\u0002\\u000267\\u0007/\\u0002\\u000278\\u0007Q\\u0002\\u0002\", \"8\\u0012\\u0003\\u0002\\u0002\\u00029:\\u0007Q\\u0002\\u0002:;\\u0007/\\u0002\", \"\\u0002;<\\u0007Q\\u0002\\u0002<=\\u0007/\\u0002\\u0002=>\\u0007Q\\u0002\\u0002\", \">\\u0014\\u0003\\u0002\\u0002\\u0002?@\\u00070\\u0002\\u0002@\\u0016\\u0003\\u0002\", \"\\u0002\\u0002AB\\t\\u0002\\u0002\\u0002B\\u0018\\u0003\\u0002\\u0002\\u0002CD\", \"\\t\\u0003\\u0002\\u0002D\\u001a\\u0003\\u0002\\u0002\\u0002EF\\t\\u0004\\u0002\", \"\\u0002F\\u001c\\u0003\\u0002\\u0002\\u0002GI\\t\\u0005\\u0002\\u0002HG\\u0003\", \"\\u0002\\u0002\\u0002IJ\\u0003\\u0002\\u0002\\u0002JH\\u0003\\u0002\\u0002\\u0002\", \"JK\\u0003\\u0002\\u0002\\u0002K\\u001e\\u0003\\u0002\\u0002\\u0002LM\\u00073\\u0002\", \"\\u0002MN\\u0007/\\u0002\\u0002NZ\\u00072\\u0002\\u0002OP\\u00072\\u0002\\u0002\", \"PQ\\u0007/\\u0002\\u0002QZ\\u00073\\u0002\\u0002RS\\u00073\\u0002\\u0002ST\\u0007\", \"1\\u0002\\u0002TU\\u00074\\u0002\\u0002UV\\u0007/\\u0002\\u0002VW\\u00073\\u0002\", \"\\u0002WX\\u00071\\u0002\\u0002XZ\\u00074\\u0002\\u0002YL\\u0003\\u0002\\u0002\", \"\\u0002YO\\u0003\\u0002\\u0002\\u0002YR\\u0003\\u0002\\u0002\\u0002Z \\u0003\\u0002\", \"\\u0002\\u0002[]\\t\\u0006\\u0002\\u0002\\\\[\\u0003\\u0002\\u0002\\u0002]^\\u0003\", \"\\u0002\\u0002\\u0002^\\\\\\u0003\\u0002\\u0002\\u0002^_\\u0003\\u0002\\u0002\\u0002\", \"_\\\"\\u0003\\u0002\\u0002\\u0002`a\\t\\u0007\\u0002\\u0002a$\\u0003\\u0002\\u0002\", \"\\u0002bc\\t\\b\\u0002\\u0002c&\\u0003\\u0002\\u0002\\u0002\\u0006\\u0002JY^\\u0002\"].join(\"\");\nconst atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\nconst decisionsToDFA = atn.decisionToState.map((ds, index) => new antlr4.dfa.DFA(ds, index));\nexport default class pgnLexer extends antlr4.Lexer {\n  constructor(input) {\n    super(input);\n    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\n    this.tags = {};\n    this.moves = [];\n  }\n\n  get atn() {\n    return atn;\n  }\n\n}\npgnLexer.grammarFileName = \"pgn.g4\";\npgnLexer.channelNames = [\"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\"];\npgnLexer.modeNames = [\"DEFAULT_MODE\"];\npgnLexer.literalNames = [null, \"'\\\"'\", \"'{'\", \"'}'\", \"'['\", \"']'\", \"'x'\", \"'='\", \"'O-O'\", \"'O-O-O'\", \"'.'\"];\npgnLexer.symbolicNames = [null, null, null, null, null, null, null, null, null, null, null, \"FILE\", \"RANK\", \"PIECE\", \"GLYPH\", \"RESULT\", \"INT\", \"CHAR\", \"WS\"];\npgnLexer.ruleNames = [\"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \"T__5\", \"T__6\", \"T__7\", \"T__8\", \"T__9\", \"FILE\", \"RANK\", \"PIECE\", \"GLYPH\", \"RESULT\", \"INT\", \"CHAR\", \"WS\"];\npgnLexer.EOF = antlr4.Token.EOF;\npgnLexer.T__0 = 1;\npgnLexer.T__1 = 2;\npgnLexer.T__2 = 3;\npgnLexer.T__3 = 4;\npgnLexer.T__4 = 5;\npgnLexer.T__5 = 6;\npgnLexer.T__6 = 7;\npgnLexer.T__7 = 8;\npgnLexer.T__8 = 9;\npgnLexer.T__9 = 10;\npgnLexer.FILE = 11;\npgnLexer.RANK = 12;\npgnLexer.PIECE = 13;\npgnLexer.GLYPH = 14;\npgnLexer.RESULT = 15;\npgnLexer.INT = 16;\npgnLexer.CHAR = 17;\npgnLexer.WS = 18;","map":{"version":3,"sources":["/home/mario/Desktop/ChessLion/client/src/utils/pgn/.antlr/pgnLexer.js"],"names":["antlr4","serializedATN","join","atn","ATNDeserializer","deserialize","decisionsToDFA","decisionToState","map","ds","index","dfa","DFA","pgnLexer","Lexer","constructor","input","_interp","LexerATNSimulator","PredictionContextCache","tags","moves","grammarFileName","channelNames","modeNames","literalNames","symbolicNames","ruleNames","EOF","Token","T__0","T__1","T__2","T__3","T__4","T__5","T__6","T__7","T__8","T__9","FILE","RANK","PIECE","GLYPH","RESULT","INT","CHAR","WS"],"mappings":"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","sourcesContent":["// Generated from /home/mario/Desktop/ChessLion/client/src/utils/pgn/pgn.g4 by ANTLR 4.9.2\n// jshint ignore: start\nimport antlr4 from 'antlr4';\n\n\n\nconst serializedATN = [\"\\u0003\\u608b\\ua72a\\u8133\\ub9ed\\u417c\\u3be7\\u7786\",\n    \"\\u5964\\u0002\\u0014d\\b\\u0001\\u0004\\u0002\\t\\u0002\\u0004\\u0003\\t\\u0003\",\n    \"\\u0004\\u0004\\t\\u0004\\u0004\\u0005\\t\\u0005\\u0004\\u0006\\t\\u0006\\u0004\\u0007\",\n    \"\\t\\u0007\\u0004\\b\\t\\b\\u0004\\t\\t\\t\\u0004\\n\\t\\n\\u0004\\u000b\\t\\u000b\\u0004\",\n    \"\\f\\t\\f\\u0004\\r\\t\\r\\u0004\\u000e\\t\\u000e\\u0004\\u000f\\t\\u000f\\u0004\\u0010\",\n    \"\\t\\u0010\\u0004\\u0011\\t\\u0011\\u0004\\u0012\\t\\u0012\\u0004\\u0013\\t\\u0013\",\n    \"\\u0003\\u0002\\u0003\\u0002\\u0003\\u0003\\u0003\\u0003\\u0003\\u0004\\u0003\\u0004\",\n    \"\\u0003\\u0005\\u0003\\u0005\\u0003\\u0006\\u0003\\u0006\\u0003\\u0007\\u0003\\u0007\",\n    \"\\u0003\\b\\u0003\\b\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\t\\u0003\\n\\u0003\\n\\u0003\",\n    \"\\n\\u0003\\n\\u0003\\n\\u0003\\n\\u0003\\u000b\\u0003\\u000b\\u0003\\f\\u0003\\f\\u0003\",\n    \"\\r\\u0003\\r\\u0003\\u000e\\u0003\\u000e\\u0003\\u000f\\u0006\\u000fI\\n\\u000f\",\n    \"\\r\\u000f\\u000e\\u000fJ\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\",\n    \"\\u0003\\u0010\\u0003\\u0010\\u0003\\u0010\\u0005\\u0010Z\\n\\u0010\\u0003\\u0011\",\n    \"\\u0006\\u0011]\\n\\u0011\\r\\u0011\\u000e\\u0011^\\u0003\\u0012\\u0003\\u0012\\u0003\",\n    \"\\u0013\\u0003\\u0013\\u0002\\u0002\\u0014\\u0003\\u0003\\u0005\\u0004\\u0007\\u0005\",\n    \"\\t\\u0006\\u000b\\u0007\\r\\b\\u000f\\t\\u0011\\n\\u0013\\u000b\\u0015\\f\\u0017\\r\",\n    \"\\u0019\\u000e\\u001b\\u000f\\u001d\\u0010\\u001f\\u0011!\\u0012#\\u0013%\\u0014\",\n    \"\\u0003\\u0002\\t\\u0003\\u0002cj\\u0003\\u00023:\\u0006\\u0002DDMMPPST\\u0006\",\n    \"\\u0002##%%--AA\\u0003\\u00022;\\u0004\\u0002C\\\\c|\\u0005\\u0002\\u000b\\f\\u000f\",\n    \"\\u000f\\\"\\\"\\u0002g\\u0002\\u0003\\u0003\\u0002\\u0002\\u0002\\u0002\\u0005\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u0007\\u0003\\u0002\\u0002\\u0002\\u0002\\t\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u000b\\u0003\\u0002\\u0002\\u0002\\u0002\\r\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u000f\\u0003\\u0002\\u0002\\u0002\\u0002\\u0011\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u0013\\u0003\\u0002\\u0002\\u0002\\u0002\\u0015\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u0017\\u0003\\u0002\\u0002\\u0002\\u0002\\u0019\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u001b\\u0003\\u0002\\u0002\\u0002\\u0002\\u001d\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002\\u001f\\u0003\\u0002\\u0002\\u0002\\u0002!\\u0003\",\n    \"\\u0002\\u0002\\u0002\\u0002#\\u0003\\u0002\\u0002\\u0002\\u0002%\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u0003\\'\\u0003\\u0002\\u0002\\u0002\\u0005)\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0007+\\u0003\\u0002\\u0002\\u0002\\t-\\u0003\\u0002\\u0002\\u0002\\u000b\",\n    \"/\\u0003\\u0002\\u0002\\u0002\\r1\\u0003\\u0002\\u0002\\u0002\\u000f3\\u0003\\u0002\",\n    \"\\u0002\\u0002\\u00115\\u0003\\u0002\\u0002\\u0002\\u00139\\u0003\\u0002\\u0002\",\n    \"\\u0002\\u0015?\\u0003\\u0002\\u0002\\u0002\\u0017A\\u0003\\u0002\\u0002\\u0002\",\n    \"\\u0019C\\u0003\\u0002\\u0002\\u0002\\u001bE\\u0003\\u0002\\u0002\\u0002\\u001d\",\n    \"H\\u0003\\u0002\\u0002\\u0002\\u001fY\\u0003\\u0002\\u0002\\u0002!\\\\\\u0003\\u0002\",\n    \"\\u0002\\u0002#`\\u0003\\u0002\\u0002\\u0002%b\\u0003\\u0002\\u0002\\u0002\\'(\",\n    \"\\u0007$\\u0002\\u0002(\\u0004\\u0003\\u0002\\u0002\\u0002)*\\u0007}\\u0002\\u0002\",\n    \"*\\u0006\\u0003\\u0002\\u0002\\u0002+,\\u0007\\u007f\\u0002\\u0002,\\b\\u0003\\u0002\",\n    \"\\u0002\\u0002-.\\u0007]\\u0002\\u0002.\\n\\u0003\\u0002\\u0002\\u0002/0\\u0007\",\n    \"_\\u0002\\u00020\\f\\u0003\\u0002\\u0002\\u000212\\u0007z\\u0002\\u00022\\u000e\",\n    \"\\u0003\\u0002\\u0002\\u000234\\u0007?\\u0002\\u00024\\u0010\\u0003\\u0002\\u0002\",\n    \"\\u000256\\u0007Q\\u0002\\u000267\\u0007/\\u0002\\u000278\\u0007Q\\u0002\\u0002\",\n    \"8\\u0012\\u0003\\u0002\\u0002\\u00029:\\u0007Q\\u0002\\u0002:;\\u0007/\\u0002\",\n    \"\\u0002;<\\u0007Q\\u0002\\u0002<=\\u0007/\\u0002\\u0002=>\\u0007Q\\u0002\\u0002\",\n    \">\\u0014\\u0003\\u0002\\u0002\\u0002?@\\u00070\\u0002\\u0002@\\u0016\\u0003\\u0002\",\n    \"\\u0002\\u0002AB\\t\\u0002\\u0002\\u0002B\\u0018\\u0003\\u0002\\u0002\\u0002CD\",\n    \"\\t\\u0003\\u0002\\u0002D\\u001a\\u0003\\u0002\\u0002\\u0002EF\\t\\u0004\\u0002\",\n    \"\\u0002F\\u001c\\u0003\\u0002\\u0002\\u0002GI\\t\\u0005\\u0002\\u0002HG\\u0003\",\n    \"\\u0002\\u0002\\u0002IJ\\u0003\\u0002\\u0002\\u0002JH\\u0003\\u0002\\u0002\\u0002\",\n    \"JK\\u0003\\u0002\\u0002\\u0002K\\u001e\\u0003\\u0002\\u0002\\u0002LM\\u00073\\u0002\",\n    \"\\u0002MN\\u0007/\\u0002\\u0002NZ\\u00072\\u0002\\u0002OP\\u00072\\u0002\\u0002\",\n    \"PQ\\u0007/\\u0002\\u0002QZ\\u00073\\u0002\\u0002RS\\u00073\\u0002\\u0002ST\\u0007\",\n    \"1\\u0002\\u0002TU\\u00074\\u0002\\u0002UV\\u0007/\\u0002\\u0002VW\\u00073\\u0002\",\n    \"\\u0002WX\\u00071\\u0002\\u0002XZ\\u00074\\u0002\\u0002YL\\u0003\\u0002\\u0002\",\n    \"\\u0002YO\\u0003\\u0002\\u0002\\u0002YR\\u0003\\u0002\\u0002\\u0002Z \\u0003\\u0002\",\n    \"\\u0002\\u0002[]\\t\\u0006\\u0002\\u0002\\\\[\\u0003\\u0002\\u0002\\u0002]^\\u0003\",\n    \"\\u0002\\u0002\\u0002^\\\\\\u0003\\u0002\\u0002\\u0002^_\\u0003\\u0002\\u0002\\u0002\",\n    \"_\\\"\\u0003\\u0002\\u0002\\u0002`a\\t\\u0007\\u0002\\u0002a$\\u0003\\u0002\\u0002\",\n    \"\\u0002bc\\t\\b\\u0002\\u0002c&\\u0003\\u0002\\u0002\\u0002\\u0006\\u0002JY^\\u0002\"].join(\"\");\n\n\nconst atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);\n\nconst decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );\n\nexport default class pgnLexer extends antlr4.Lexer {\n\n    static grammarFileName = \"pgn.g4\";\n    static channelNames = [ \"DEFAULT_TOKEN_CHANNEL\", \"HIDDEN\" ];\n\tstatic modeNames = [ \"DEFAULT_MODE\" ];\n\tstatic literalNames = [ null, \"'\\\"'\", \"'{'\", \"'}'\", \"'['\", \"']'\", \"'x'\", \n                         \"'='\", \"'O-O'\", \"'O-O-O'\", \"'.'\" ];\n\tstatic symbolicNames = [ null, null, null, null, null, null, null, null, \n                          null, null, null, \"FILE\", \"RANK\", \"PIECE\", \"GLYPH\", \n                          \"RESULT\", \"INT\", \"CHAR\", \"WS\" ];\n\tstatic ruleNames = [ \"T__0\", \"T__1\", \"T__2\", \"T__3\", \"T__4\", \"T__5\", \"T__6\", \n                      \"T__7\", \"T__8\", \"T__9\", \"FILE\", \"RANK\", \"PIECE\", \"GLYPH\", \n                      \"RESULT\", \"INT\", \"CHAR\", \"WS\" ];\n\n    constructor(input) {\n        super(input)\n        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());\n\n            this.tags = {};\n            this.moves = [];\n\n    }\n\n    get atn() {\n        return atn;\n    }\n}\n\npgnLexer.EOF = antlr4.Token.EOF;\npgnLexer.T__0 = 1;\npgnLexer.T__1 = 2;\npgnLexer.T__2 = 3;\npgnLexer.T__3 = 4;\npgnLexer.T__4 = 5;\npgnLexer.T__5 = 6;\npgnLexer.T__6 = 7;\npgnLexer.T__7 = 8;\npgnLexer.T__8 = 9;\npgnLexer.T__9 = 10;\npgnLexer.FILE = 11;\npgnLexer.RANK = 12;\npgnLexer.PIECE = 13;\npgnLexer.GLYPH = 14;\npgnLexer.RESULT = 15;\npgnLexer.INT = 16;\npgnLexer.CHAR = 17;\npgnLexer.WS = 18;\n\n\n\n"]},"metadata":{},"sourceType":"module"}